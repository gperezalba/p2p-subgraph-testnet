type Offer @entity {
  id: ID!
  owner: User! # address
  sellToken: Token! # address
  buyToken: Token!
  sellAmount: BigDecimal!
  buyAmount: BigDecimal!
  isPartial: Boolean!
  isBuyFiat: Boolean!
  auditor: Bytes
  description: String
  isOpen: Boolean!
}

#union Commodity = Gold | Diamond

type OfferCommodity @entity {
  id: ID!
  owner: User! # address
  sellToken: Token! # address
  buyToken: Token!
  sellId: Commodity! #tokenAddress - tokenId
  buyAmount: BigDecimal!
  description: String
  isOpen: Boolean!
}

type Deal @entity {
  id: ID!
  offer: Offer!
  seller: User!
  buyer: User!
  sellAmount: BigDecimal!
  buyAmount: BigDecimal!
  sellerVote: BigInt
  buyerVote: BigInt
  auditorVote: BigDecimal
  isPending: Boolean!
  isSuccess: Boolean
  executor: Bytes
}

type DealCommodity @entity {
  id: ID!
  offer: OfferCommodity!
  buyer: User!
}

type User @entity {
  id: ID!
  offers: [Offer!]
  commodityOffers: [OfferCommodity!]
  deals: [Deal!]
  commodityDeals: [DealCommodity!]
  goodReputation: BigInt
  badReputation: BigInt
}

type Token @entity {
  id: ID!
  tokenSymbol: String!
  tokenName: String!
  isNFT: Boolean!
  category: BigInt
}

type Commodity @entity {
  id: ID!
  gold: Gold
  diamond: Diamond
}

type Gold @entity {
  id: ID!
  reference: String!
  token: Token!
  metadata: String
  weight_brute: String
  weight_fine: BigDecimal
  law: BigDecimal
  isLive: Boolean
}

type Diamond @entity {
  id: ID!
  reference: String!
  token: Token!
  color: String
  clarity: String #cambiar a BigDecimal para filtrar?
  cut: String
  carat_weight: BigDecimal
  isLive: Boolean
}

type Auditor @entity {
  id: ID!
  requests: [Deal!]
}